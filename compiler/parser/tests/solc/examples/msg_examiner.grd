// This is supposed to allow for examination of msgs, but it proved less than informative.
// I'd just skip this for now.

contract MsgExaminer {

    creator address
    miner address

    contractCreationData bytes
    contractCreationGas uint
    contractCreationValue uint
    contractCreationTxGasprice uint
    contractCreationTxOrigin address

    constructor(){
        creator = msg.sender 								// msg is a global variable

        miner = 0x910561dc5921131ee5de1e9748976a4b9c8c1e80
        contractCreationData = msg.data
        contractCreationGas = msg.gas
        contractCreationValue = msg.value  				// the endowment of this contract in wei

        contractCreationTxGasprice = tx.gasprice
        contractCreationTxOrigin = tx.origin
    }

    external (
        func getContractCreationData() bytes {
            return contractCreationData
        }

        func getContractCreationGas() uint {
            return contractCreationGas
        }

        func getContractCreationValue() uint { // returns the original endowment of the contract									              		// set at creation time with "value: <someweivalue>"
        	return contractCreationValue                        // this is now the "balance" of the contract
        }

        func getContractCreationTxGasprice() uint { // returned 50000000000 for me. Must be the gasprice											     				 // the sender is willing to pay. msg.gasPrice should be msg.gasLimit
        	return contractCreationTxGasprice
        }

        func getContractCreationTxOrigin() address { // returned my coinbase address.											     				  //  Not sure if a chain of transactions would return the same.
        	return contractCreationTxOrigin
        }
    )

    msgDataBeforeCreatorSend uint
    msgDataAfterCreatorSend uint
    msgGasBeforeCreatorSend uint
    msgGasAfterCreatorSend uint
    msgValueBeforeCreatorSend uint
    msgValueAfterCreatorSend uint

    external (
        func sendOneEtherToHome() bool {

            msgGasBeforeCreatorSend = msg.gas
            msgDataBeforeCreatorSend = msg.data
            msgValueBeforeCreatorSend = msg.value

            returnval = creator.send(1000000000000000000)

            msgGasAfterCreatorSend = msg.gas
            msgDataAfterCreatorSend = msg.data
            msgValueAfterCreatorSend = msg.value

            return returnval
        }

        func getMsgDataBefore() uint {
            return msgDataBeforeCreatorSend
        }

        func getMsgDataAfter() uint {
            return msgDataAfterCreatorSend
        }

        func getMsgGasBefore() uint {
            return msgGasBeforeCreatorSend
        }

        func getMsgGasAfter() uint {
            return msgGasAfterCreatorSend
        }

        func getMsgValueBefore() uint {
            return msgValueBeforeCreatorSend
        }

        func getMsgValueAfter() uint {
            return msgValueAfterCreatorSend
        }

        func kill(){
            if msg.sender == creator {
                suicide(creator)
            }
        }
    )

}
