
interface Noisy {
    makeNoise() string
}




abstract class Animal is Noisy {

    getName() string {

    }

}

// must implement the interface
class Dog {

    name string

    constructor(name string){
        this.name = name
    }

    makeNoise() string {
        return "Woof!"
    }

}

class Pupper inherits Dog {

    makeNoise() string {
        return "woof..."
    }
}

main(){
    d := Dog("Cookie")
    io.Printf("%s: %s", d.getName(), d.makeNoise())
    p := Pupper("Biscuit")
    io.Printf("%s: %s", p.getName(), p.makeNoise())
}
