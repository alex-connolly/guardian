package digixdao guardian 0.0.1

contract Config inherits ConfigBase is ConfigInterface {

  event ConfigChange(indexed configKey []byte, indexed user address)

  func ifAdmin(){
      require(admins[msg.sender])
  }

  func ifOwner(){
      require(msg.sender == owner)
  }

  constructor(){
      owner = msg.sender
      admins[owner] = true
  }

  func setConfigAddress(key []byte, val address) (success bool){
      ifAdmin()
      addressMap[key] = val
      return true
  }

  func setConfigBool(key []byte, val bool) (success bool){
      boolMap[key] = val
      return true
  }

  func setConfigBytes(key, val []byte) (success bool){
      bytesMap[key] = val
      return true
  }

  func setConfigUint(key []byte, val uint) (success bool) {
      uintMap[key] = val
      return true
  }

 func getConfigAddress(key []byte) (val address){
     return addressMap[key]
 }

 func getConfigBool(key bytes32) (val bool) {
    val = boolMap[key];
    return val;
  }

  func getConfigBytes(key bytes32) (val bytes32) {
    val = bytesMap[key];
    return val;
  }

  func getConfigUint(key bytes32) (val uint256) {
    val = uintMap[key];
    return val;
  }

  func addAdmin(admin address) (success bool) {
      ifOwner()
    admins[admin] = true;
    return true;
  }

  func removeAdmin(admin address) (success bool) {
      ifOwner()
    admins[admin] = false;
    return true;
  }

}
