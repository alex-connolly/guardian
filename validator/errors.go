package validator

const (
	errInvalidBinaryOpTypes              = "Binary operator %s is not defined for operands %s and %s"
	errInvalidFuncCall                   = "Cannot use %s as arguments to function of type %s"
	errInvalidCall                       = "Type %s cannot be called"
	errInvalidConstructorCall            = "No constructor signature for type %s matches arguments %s"
	errInvalidSubscriptable              = "Type %s is not subscriptable"
	errPropertyNotFound                  = "Type %s does not have property %s"
	errUnnamedReference                  = "Unnamed reference %s"
	errTypeRequired                      = "%s is not a %s type"
	errCallExpressionNoFunc              = "Cannot call non-function type %s"
	errTypeNotVisible                    = "Type %s is not visible"
	errInvalidAssignment                 = "Cannot assign %s = %s"
	errTypecheckingLoop                  = "Typechecking loop"
	errInvalidExpressionLeft             = "Cannot assign to expression"
	errStringLiteralUnsupported          = "The current VM does not support string literals"
	errImpossibleCast                    = "Type %s cannot be cast to type %s"
	errInvalidForEachType                = "Cannot iterate over type %s"
	errInvalidForEachVariables           = "Cannot assign %d variables to iterator producing %d variables"
	errInvalidParameter                  = "Invalid parameter type %s"
	errCannotParametrizeType             = "Cannot parametrize type %s"
	errWrongParameterLength              = "Type %s requires %d parameters"
	errInvalidModifier                   = "Invalid modifier %s"
	errMutuallyExclusiveModifiers        = "Mutually exclusive modifiers: %s and %s"
	errDuplicateModifiers                = "Duplicate modifier %s"
	errRequiredModifier                  = "Modifier from group %s required"
	errUnknown                           = "Unknown error"
	errImpossibleCastToNonType           = "Cannot cast to non-type"
	errUnimplementedInterface            = "%s does not implement interface %s: missing method %s"
	errInvalidReference                  = "Invalid reference expression type"
	errUnknownExpressionType             = "Unknown expression type"
	errInvalidInheritance                = "Cannot inherit type %s"
	errIncompatibleInheritance           = "Cannot inherit from both %s and %s"
	errMultipleTypesInSingleValueContext = "Tuple in single-value context"
	errInvalidAccess                     = "Property %s has %s access in type %s"
	errRequiredType                      = "Required type %s, found %s"
	errInvalidFuncType                   = "Invalid func type"
	errInvalidReturnStatementOutsideFunc = "Return statement must be inside func"
)
